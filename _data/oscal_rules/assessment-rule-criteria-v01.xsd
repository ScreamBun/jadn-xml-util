<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:jadn="jadn_base_types">
	<xs:complexType name="Criteria">
		<xs:sequence>
			<xs:element name="Criteria-Elements" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element id="field_Criterion" name="Criterion" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Criterion" uuid="UUIDDatatype">
		<xs:sequence>
			<xs:element id="element_1" name="name" type="TokenDatatype" minOccurs="0" maxOccurs="1" />
			<xs:element id="element_2" name="description" type="TokenDatatype" />
			<xs:element id="element_3" name="subject" type="TokenDatatype" />
			<xs:element id="element_4" name="type" type="TokenDatatype" />
			<xs:element id="element_5" name="criteria" type="Test" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Test">
		<xs:choice>
			<xs:element id="element_1_test" name="singleValue" type="xs:integer" />
			<xs:element id="element_2_test" name="valueRange" type="Value-Range" />
			<xs:element id="element_3_test" name="allowed" type="Allowed" />
			<xs:element id="element_4_test" name="disallowed" type="Disallowed" />
			<xs:element id="element_5_test" name="boolean" type="xs:boolean" />
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="Value-Range">
		<xs:sequence>
			<xs:element id="element_1_range" name="minimum" type="xs:integer" minOccurs="0" maxOccurs="1" />
			<xs:element id="element_2_range" name="maximum" type="xs:integer" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Allowed">
		<xs:sequence>
			<xs:element name="Allowed-Elements" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element id="element_String" name="StringDatatype" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Disallowed">
		<xs:sequence>
			<xs:element name="Disallowed-Elements" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element id="field_String" name="String" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element id="element_Criteria" name="Criteria" type="Criteria" />
	<xs:element id="element_Criterion" name="Criterion" type="Criterion" />

   <xs:simpleType name="StringDatatype">
      <xs:annotation>
         <xs:documentation>A non-empty string of Unicode characters with leading and trailing whitespace
				disallowed. Whitespace is: U+9, U+10, U+32 or [ \n\t]+</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:annotation>
            <xs:documentation>The 'string' datatype restricts the XSD type by prohibiting leading 
					and trailing whitespace, and something (not only whitespace) is required.</xs:documentation>
         </xs:annotation>
         <xs:whiteSpace value="preserve"/>
         <xs:pattern value="\S(.*\S)?">
            <xs:annotation>
               <xs:documentation>This pattern ensures that leading and trailing whitespace is
						disallowed. This helps to even the user experience between implementations
						related to whitespace.</xs:documentation>
            </xs:annotation>
         </xs:pattern>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="TokenDatatype">
      <xs:annotation>
			<!--<xs:documentation>Matching XSD NCName, except whitespace is not collapsed.</xs:documentation> -->
         <xs:documentation>A non-empty, non-colonized name as defined by XML Schema Part 2: Datatypes
				Second Edition (https://www.w3.org/TR/xmlschema11-2/#NCName), with leading and trailing
				whitespace disallowed.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="StringDatatype">
         <xs:pattern value="(\p{L}|_)(\p{L}|\p{N}|[.\-_])*">
            <xs:annotation>
					<!--<xs:documentation>An XML initial character (but not colon), followed 
						by any XML name character (but not colon).</xs:documentation> -->
               <xs:documentation>A single token may not contain whitespace.
					</xs:documentation>
            </xs:annotation>
         </xs:pattern>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="URIDatatype">
      <xs:annotation>
         <xs:documentation>A universal resource identifier (URI) formatted according to RFC3986.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:anyURI">
         <xs:pattern value="[a-zA-Z][a-zA-Z0-9+\-.]+:.*\S">
            <xs:annotation>
               <xs:documentation>Requires a scheme with colon per RFC 3986.</xs:documentation>
            </xs:annotation>
         </xs:pattern>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="UUIDDatatype">
      <xs:annotation>
         <xs:documentation>A type 4 ('random' or 'pseudorandom') or type 5 UUID per RFC
				4122.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="StringDatatype">
         <xs:pattern value="[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}">
            <xs:annotation>
               <xs:documentation>A sequence of 8-4-4-4-12 hex digits, with extra
						constraints in the 13th and 17-18th places for version 4 and 5
					</xs:documentation>
            </xs:annotation>
         </xs:pattern>
      </xs:restriction>
   </xs:simpleType>
</xs:schema>